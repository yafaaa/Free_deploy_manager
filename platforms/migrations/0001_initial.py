# Generated by Django 5.2.3 on 2025-07-01 08:39

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DatabaseType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProgrammingLanguage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField()),
                ('url', models.URLField()),
                ('free_tier_description', models.TextField()),
                ('supports_custom_domains', models.BooleanField(default=False)),
                ('has_auto_sleep', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('free_ram_mb', models.IntegerField(blank=True, null=True)),
                ('free_disk_gb', models.IntegerField(blank=True, null=True)),
                ('free_bandwidth_gb', models.IntegerField(blank=True, null=True)),
                ('supported_databases', models.ManyToManyField(related_name='platforms', to='platforms.databasetype')),
                ('supported_features', models.ManyToManyField(related_name='platforms', to='platforms.feature')),
                ('supported_languages', models.ManyToManyField(related_name='platforms', to='platforms.programminglanguage')),
            ],
        ),
    ]
